<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper.book">

	<resultMap id="book"
		type="com.basic.projectbook.vo.BookVO">
		<id property="no" column="no" />
		<result property="title" column="title" />
		<result property="image" column="image" />
		<result property="author" column="author" />
		<result property="discount" column="discount" />
		<result property="publisher" column="publisher" />
		<result property="pubdate" column="pubdate" />
		<result property="isbn" column="isbn" />
		<result property="description" column="description" />
		<result property="genre" column="genre" />
		<result property="country" column="country" />
		
	</resultMap>
	<resultMap id="bookAndRatingMap" type="com.basic.projectbook.vo.BookAndRatingBean">
  <id property="isbn" column="isbn"/>
  <result property="title" column="title"/>
  <result property="author" column="author"/>
  <result property="publisher" column="publisher"/>
  <result property="pubdate" column="pubdate"/>
  <result property="description" column="description"/>
  <result property="genre" column="genre"/>
  <result property="country" column="country"/>
  <result property="price" column="price"/>
  <result property="rating" column="rating"/>
</resultMap>

	<select id="getAllBook" resultMap="book">
		select * from book
	</select>
	<select id="getAllBookLatest" resultMap="book">
	SELECT * FROM book ORDER BY pubdate DESC;
	</select>
	<select id="getAllBookLetter" resultMap="book">
	SELECT * FROM book ORDER BY title ASC;
	</select>
	<select id="getGenreBook" parameterType="String" resultMap="book">
		select * from book where genre=#{genre}
	</select>
	<select id="getCountryBook" parameterType="String" resultMap="book">
		select * from book where country=#{country}
	</select>
	<select id="getPublisherBook" parameterType="String" resultMap="book">
		select * from book where publisher=#{publisher}
	</select>

	<insert id="bookInsert" parameterType="book">
		insert into book (title, image, author, discount, publisher, pubdate, isbn, description, genre, country) values(#{title}, #{image}, #{author}, #{discount}, #{publisher}, #{pubdate}, #{isbn}, #{description}, #{genre}, #{country})
	</insert>
	
	<select id="getBookInfo" parameterType="String" resultMap="book">
		select * from book where isbn=#{isbn}
	</select>
	<delete id="deleteBook" parameterType="book">
		delete from book where isbn=#{isbn}
	</delete>
	<select id="getLatestThreeBook" resultMap="book">
		SELECT * FROM book ORDER BY pubdate DESC LIMIT 3;
	</select>
	<select id="getOneBookGenre" parameterType="String" resultMap="book">
		select * from book where genre=#{genre} limit 1
	</select>
	<select id="getBookListGenre" parameterType="String" resultMap="book">
		select * from book where genre=#{genre} limit 3
	</select>
	<select id="getAllBookTitle" parameterType="String" resultMap="book">
		SELECT * FROM book WHERE title LIKE CONCAT('%', #{keyword}, '%')
	</select>
	<select id="getAllBookDescription" parameterType="String" resultMap="book">
		SELECT * FROM book WHERE description LIKE CONCAT('%', #{keyword}, '%')
	</select>
	<select id="getAllBookAuthor" parameterType="String" resultMap="book">
		SELECT * FROM book WHERE author LIKE CONCAT('%', #{keyword}, '%')
	</select>
<!--  -->
	<select id="getAllBookAndRating" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating 
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  GROUP BY b.isbn;
	</select>
	<select id="getAllBookLatestAndRating" resultMap="bookAndRatingMap">
	SELECT b.*,
          COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
    FROM book b
    LEFT OUTER JOIN review r ON b.isbn = r.isbn
    GROUP BY b.isbn
    ORDER BY b.pubdate DESC;
	</select>
	<select id="getAllBookLetterAndRating" resultMap="bookAndRatingMap">
	SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  GROUP BY b.isbn
  ORDER BY b.title ASC;
	</select>
	<select id="getGenreBookAndRating" parameterType="String" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  WHERE b.genre = #{genre}
  GROUP BY b.isbn
	</select>
	<select id="getCountryBookAndRating" parameterType="String" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  WHERE b.country = #{country}
  GROUP BY b.isbn
	</select>
	<select id="getPublisherBookAndRating" parameterType="String" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  WHERE b.publisher = #{publisher}
  GROUP BY b.isbn
	</select>
	<select id="getAllBookTitleAndRating" parameterType="String" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  WHERE b.title LIKE CONCAT('%', #{keyword}, '%')
  GROUP BY b.isbn;
	</select>
	<select id="getAllBookDescriptionAndRating" parameterType="String" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  WHERE b.description LIKE CONCAT('%', #{keyword}, '%')
  GROUP BY b.isbn;
	</select>
	<select id="getAllBookAuthorAndRating" parameterType="String" resultMap="bookAndRatingMap">
		SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  WHERE b.author LIKE CONCAT('%', #{keyword}, '%')
  GROUP BY b.isbn;
	</select>
	<select id="getAllBookRatingAndRating" resultMap="bookAndRatingMap">
  SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  GROUP BY b.isbn
  ORDER BY rating DESC;
</select>
<select id="getAllBookSaleAndRating" resultMap="bookAndRatingMap">
  SELECT b.*, COALESCE(ROUND(AVG(r.rating), 2), 0) AS rating
  FROM book b
  LEFT OUTER JOIN review r
  ON b.isbn = r.isbn
  LEFT OUTER JOIN sale s
  ON b.isbn = s.isbn
  GROUP BY b.isbn
  ORDER BY COALESCE(SUM(s.qty), 0) DESC
</select>
	

</mapper>